/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-12 10:10:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charSet=\"ISO-8859-1\">\r\n");
      out.write("<title>Registration</title>\r\n");
      out.write("	<style>\r\n");
      out.write("		#box{\r\n");
      out.write("				background:#497f98;\r\n");
      out.write("			    margin: 50px auto;\r\n");
      out.write("			    width: 40%;		\r\n");
      out.write("			    text-align: center;\r\n");
      out.write("			    border-radius:10px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#formTitle{\r\n");
      out.write("			    color: #fff;\r\n");
      out.write("			    font-weight: bold;\r\n");
      out.write("			    font-size: 20pt;\r\n");
      out.write("			    background:#00adff91;\r\n");
      out.write("			    padding: 6px;\r\n");
      out.write("			    border-radius:10px;\r\n");
      out.write("		}\r\n");
      out.write("		.inputBox{\r\n");
      out.write("			border-radius: 2px;\r\n");
      out.write("		    border: none;\r\n");
      out.write("		    width: 45%;\r\n");
      out.write("		    height: 25px;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("	\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"box\">\r\n");
      out.write("			<div style=\"font-family:sans-serif\" id=\"formTitle\">Registration Form</div><br/>\r\n");
      out.write("		<form action=\"btnRegisterClick\" method=\"post\">\r\n");
      out.write("			<input type=\"text\" name=\"user_name\" class=\"inputBox\"\r\n");
      out.write("				placeholder=\" please enter name...\"> <br /> <br />\r\n");
      out.write("				\r\n");
      out.write("			<input type=\"email\" name=\"user_email\" class=\"inputBox\"\r\n");
      out.write("				placeholder=\" please enter email...\"><br /> <br />\r\n");
      out.write("				\r\n");
      out.write("			<input type=\"password\" name=\"user_password\" class=\"inputBox\"\r\n");
      out.write("				placeholder=\" please enter password...\"><br /> <br />\r\n");
      out.write("		\r\n");
      out.write("			<input type=\"submit\" value=\"Register Now\" class=\"inputBox\"> <br /> <br />\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- <div>\r\n");
      out.write("		<div>Registration page</div>\r\n");
      out.write("		<br><input type=\"text\" name=\"username\"/>\r\n");
      out.write("		<br><input type=\"submit\" name=\"Register Now\"/>\r\n");
      out.write("	</div>	 -->\r\n");
      out.write("	<br><a href=\"/insta/home\">Home Link</a>\r\n");
      out.write("	<br><a href=\"/insta/login\">Login Link</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
